# Generated by Django 4.0.5 on 2022-06-18 14:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('mobile', models.CharField(max_length=15)),
                ('gender', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_vendor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Brand_name', models.CharField(max_length=75)),
                ('Brand_logo', models.CharField(max_length=75)),
                ('Brand_description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category_name', models.CharField(max_length=75)),
                ('Category_meta_title', models.CharField(max_length=100)),
                ('Category_description', models.CharField(max_length=100)),
                ('Category_content', models.TextField()),
                ('Category_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='e_commerce.category')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_first_name', models.CharField(max_length=50)),
                ('Order_middle_name', models.CharField(max_length=50)),
                ('Order_last_name', models.CharField(max_length=50)),
                ('Order_email', models.EmailField(max_length=255, unique=True)),
                ('Order_mobile', models.CharField(max_length=15)),
                ('Order_token', models.CharField(max_length=100)),
                ('Order_description', models.CharField(max_length=100)),
                ('Order_discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Order_item_discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Order_sub_total', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Order_total', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Order_grand_total', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Order_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_name', models.CharField(max_length=75)),
                ('Product_meta_title', models.CharField(max_length=100)),
                ('Product_description', models.CharField(max_length=100)),
                ('Product_shop', models.CharField(max_length=40)),
                ('Product_content', models.TextField()),
                ('Product_purchase_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Product_discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Product_sale_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Product_quantity', models.IntegerField()),
                ('Category_product', models.ManyToManyField(to='e_commerce.category')),
                ('Product_brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='e_commerce.brand')),
            ],
        ),
        migrations.CreateModel(
            name='Product_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_type_name', models.CharField(max_length=75)),
                ('Product_type_description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Transaction_code', models.CharField(max_length=100)),
                ('Transaction_content', models.TextField()),
                ('Transaction_type', models.SmallIntegerField()),
                ('Transaction_mode', models.SmallIntegerField()),
                ('Transaction_status', models.SmallIntegerField()),
                ('Transaction_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='e_commerce.order')),
                ('Transaction_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.FloatField()),
                ('Size_product', models.ManyToManyField(to='e_commerce.product')),
            ],
        ),
        migrations.CreateModel(
            name='Product_review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Product_review_name', models.CharField(max_length=75)),
                ('Product_review_ratin', models.SmallIntegerField()),
                ('Product_review_content', models.TextField()),
                ('Product_review_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='e_commerce.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='Product_type_product',
            field=models.ManyToManyField(to='e_commerce.product_type'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_user',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Order_item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order_item_content', models.TextField()),
                ('Order_item_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Order_item_discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Product_quantity', models.IntegerField()),
                ('Order_item_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='e_commerce.order')),
                ('Order_item_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='e_commerce.product')),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Images_img', models.ImageField(upload_to='')),
                ('Images_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_commerce.category')),
                ('Images_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='e_commerce.product')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Color_name', models.CharField(max_length=75)),
                ('Color_product', models.ManyToManyField(to='e_commerce.product')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Address_address', models.CharField(max_length=50)),
                ('Address_zipcode', models.CharField(max_length=50)),
                ('Address_active', models.BooleanField()),
                ('Address_user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
